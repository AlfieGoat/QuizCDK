type Quiz @model @auth(rules: [
    { allow: groups, groups: ["admin"] },
    { allow: groups, groups: ["moderator", "user"], operations: [read]}
  ]){
  id: ID!
  quizName: String!
  questions: [QuestionContainer] @connection(keyName: "byQuiz", fields: ["id"])
}

type QuestionContainer @model @auth(rules: [
    { allow: groups, groups: ["admin"] },
    { allow: groups, groups: ["moderator", "user"], operations: [read]}
  ])
  @key(name: "byQuiz", fields: ["quizID"]) {
  id: ID!
  quizID: ID!
  questionNumber: Int! 
  question: Question! @connection
  correctAnswer: CorrectAnswer! @connection
  possibleAnswers: [Answer!]! @connection(keyName: "byQuestionContainer", fields: ["id"]) 
}

type Question @model @auth(rules: [
    { allow: groups, groups: ["admin"] },
    { allow: groups, groups: ["moderator", "user"], operations: [read]}
  ]) {
  id: ID!
  questionContainerId: ID!
  questionText: String!
}

type Answer @model @auth(rules: [
    { allow: groups, groups: ["admin"] },
    { allow: groups, groups: ["moderator", "user"], operations: [read]}
  ])
  @key(name: "byQuestionContainer", fields: ["questionContainerId"]) {
  id: ID!
  questionContainerId: ID!
  answerText: String!
}

type CorrectAnswer @model @auth(rules: [
    { allow: groups, groups: ["admin"] },
    { allow: groups, groups: ["moderator"], operations: [read]}
    { allow: groups, groups: ["user"], operations: []}
]){
  answer: Answer! @connection
}


# type Quiz @model @auth(rules: [
#     { allow: groups, groups: ["admin"] },
#     { allow: groups, groups: ["moderator", "user"], operations: [read]}
#   ]){
#   id: ID!
#   quizName: String!
#   questions: [QuestionContainer] @connection(keyName: "byQuiz", fields: ["id"])
# }

# type QuestionContainer @model @auth(rules: [
#     { allow: groups, groups: ["admin"] },
#     { allow: groups, groups: ["moderator", "user"], operations: [read]}
#   ])
#   @key(name: "byQuiz", fields: ["quizID"]) {
#   id: ID!
#   quizID: ID!
#   questionNumber: Int! 
#   question: Question! @connection
#   correctAnswer: Answer! @connection @auth(rules: [{ allow: groups, groups: ["user"], operations: []}])
#   possibleAnswers: [Answer!]! @connection(keyName: "byQuestionContainer", fields: ["id"]) 
# }

# type Question @model @auth(rules: [
#     { allow: groups, groups: ["admin"] },
#     { allow: groups, groups: ["moderator", "user"], operations: [read]}
#   ]) {
#   id: ID!
#   questionContainerId: ID!
#   questionText: String!
# }

# # type Answer @model @auth(rules: [
# #     { allow: groups, groups: ["admin"] },
# #     { allow: groups, groups: ["moderator", "user"], operations: [read]}
# #   ])
# #   @key(name: "byQuestionContainer", fields: ["questionContainerId"]) {
# #   id: ID!
# #   questionContainerId: ID!
# #   answerText: String!
# # }


# mutation MyMutation {
#   createQuiz(input: {quizName: "heidiQuiz", id: "heidiQuiz"}) {
#     id
#     quizName
#   }
#   createQuestionContainer(input: {quizID: "heidiQuiz", questionNumber: 1, id: "HQC", questionContainerQuestionId: "HQ1", questionContainerCorrectAnswerId: "HQ1CA"}) {
#     id
#   }
#   createQuestion(input: {id: "HQ1", questionContainerId: "HQC", questionText: "What Breed is Heidi"}) {
#     questionText
#   }
#   Question1: createAnswer(input: {answerText: "Golden", questionContainerId: "HQC"}) {
#     id
#     answerText
#   }
#   Question2: createAnswer(input: {answerText: "Vizsla", questionContainerId: "HQC", id: "HQ1CA"}) {
#     id
#     answerText
#   }
#   Question3: createAnswer(input: {answerText: "Beagle", questionContainerId: "HQC"}) {
#     id
#     answerText
#   }
#   Question4: createAnswer(input: {answerText: "Lab", questionContainerId: "HQC"}) {
#     id
#     answerText
#   }
# }

# query MyQuery {
#   listQuizzes {
#     items {
#       questions {
#         items {
#           possibleAnswers {
#             items {
#               answerText
#             }
#           }
#           question {
#             questionText
#           }
#           questionNumber
#           correctAnswer {
#             id
#             answerText
#           }
#         }
#       }
#       id
#     }
#   }
# }

# mutation MyMutation2 {
#   updateAnswer(input: {id: "HQ1CA", questionContainerId: "HQC"}) {
#     id
#   }
# }
